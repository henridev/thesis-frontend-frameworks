#!/usr/bin/env node
let app = require("../app");
const server = require("http").createServer(app);
// const io = require("socket.io")(server);
// const handleChatConnection = require("./chat_socket");
// const chat = io.of("/chat");

// chat.on("connection", (socket, io) => handleChatConnection(socket, chat));
// chat.on('join', chatId => handleJoin(chat, chatId))
// chat.on('leave', chatId => handleLeave(chat, chatId))

server.on("error", (error) => {
  if (error.syscall !== "listen") {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(`Port ${process.env.PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(`Port ${process.env.PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

if (!process.env.PORT) process.env.PORT = 5000;

server.listen(process.env.PORT, () => {
  console.log(`Listening on http://localhost:${process.env.PORT}`);
});
